---
 - name: provisioning EC2 instances
   hosts: localhost
   connection: local


   vars:
     keypair: aws
     instance_type: t2.micro
     image: ami-04505e74c0741db8d
     wait: yes
     group: test
     count: 2
     region: us-east-1
     security_group: my-sec-group-1

   tasks:
    - name: Create keypair
      ec2_key:
        name: "{{ keypair }}"
        region: "{{ region }}"
#        key_material: "{{ item }}"
#      with_file: /root/.ssh/MyKey1.pub
      register: ec2_key

    - name: Save private key
      copy:
        content: "{{ ec2_key.key.private_key }}"
        dest: "~/.ssh/id_rsa"
        mode: 0600
      when: ec2_key.changed
    - name: Create security group
      ec2_group:
        name: "{{ security_group }}"
        description: Security group for test servers
        region: "{{ region }}"
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
#        rules_egress:
#            proto: all
#            cidr_ip: 0.0.0.0/0
      register: basic_firewall
    - name: Lauch EC2 instances
      ec2:
        group={{ security_group }}
        instance_type={{ instance_type }}
        image={{ image }}
        wait=true
        region={{ region }}
        keypair={{ keypair }}
        count={{ count }}
      register: ec2
    - name: debug
      debug:
        var: ec2.instances[0].public_ip
    - name: debug
      debug:
        var: ec2.instances[1].public_ip
    - name: Add instance in hosts as build
      add_host:
        name: "{{ ec2.instances[0].public_ip }}"
        groups: build
    - name: Add instance in hosts as prod
      add_host:
        name: "{{ ec2.instances[1].public_ip }}"
        groups: prod
    - name: Wait a few seconds to let the machine start
      pause:
        seconds: 20

 - name: Prepare instances
   hosts: build, prod
   remote_user: ubuntu
   become: yes
   become_user: root

   tasks:
     - name: install pip
       apt:
         name: ['python3', 'python3-pip']
         state: latest
         update_cache: yes
     - name: install boto
       pip:
         name: ['boto', 'boto3', 'botocore']
     - name: Copy credentials from localhost
       copy:
         src: ~/.aws/credentials
         dest: ~/.aws/
         mode: 0644

 - name: Build webapp
   hosts: build
   remote_user: ubuntu
   become: yes
   become_user: root

   tasks:
     - name: install maven
       apt:
         name: maven
         state: present
         update_cache: yes
     - name: Clone repository
       git:
         repo: https://github.com/boxfuse/boxfuse-sample-java-war-hello.git
         dest: /tmp/boxfuse-sample-java-war-hello/
     - name: Package webapp
       shell: cd /tmp/boxfuse-sample-java-war-hello/; mvn package
     - name: Put artifact in bucket
       aws_s3:
         bucket: practicebacket.test1.com
         object: /webapp/hello-1.0.war
         src: /tmp/boxfuse-sample-java-war-hello/target/hello-1.0.war
         mode: put

 - name: Deploy app in prod
   hosts: prod
   remote_user: ubuntu
   become: yes
   become_user: root

   tasks:
     - name: install tomcat
       apt:
         name: tomcat9
         state: present
         update_cache: yes
     - name: List bucket
       aws_s3:
         bucket: practicebacket.test1.com
         mode: list
     - name: Get artifact from bucket
       aws_s3:
         bucket: practicebacket.test1.com
         object: /webapp/hello-1.0.war
         dest: /usr/local/tomcat/webapps/hello-1.0.war
         mode: get
     - name: Restart tomcat
       ansible.builtin.service:
         name: tomcat
         state: restarted
