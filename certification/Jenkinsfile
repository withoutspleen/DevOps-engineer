pipeline {
    agent any
    stages {
        stage ('git clone'){
            steps {
                             git branch: 'main', url: 'https://github.com/withoutspleen/DevOps-engineer.git'
            }
        }

        stage ('terraform init'){
            steps {
                             sh 'cd certification/terraform/ && terraform init -no-color'
            }
        }

        stage ('terraform apply'){
            steps {
                            sh 'cd certification/terraform && terraform apply -auto-approve -no-color'}
            }

        stage ('add instances ip to inventory and delivery Dockerfile'){
            environment {
                build_public_dns = """${sh(
                returnStdout: true,
                script: 'cd certification/terraform && terraform output -raw build_instance_dns'
            )}"""
            prod_public_dns = """${sh(
                returnStdout: true,
                script: 'cd certification/terraform && terraform output -raw prod_instance_dns'
            )}"""
            }
            steps {
                sh '''cat << EOF >> certification/ansible/inventory
[build]
$build_public_dns

[production]
$prod_public_dns
EOF'''
                sh 'sleep 30s'
                sh 'rsync -avz -e "ssh -i /home/user/.aws/aws-key" ../Dockerfile ubuntu@$build_public_dns:/tmp/'
            }
        }

        stage ('ansible playbook'){
            steps {
                sh 'cd certification/ansible && ansible -i inventory playbook.yml --key-file "/home/user/.ssh/aws-key"'
            }
        }
    }
}