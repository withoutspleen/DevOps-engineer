pipeline {
    agent any
    stages {
        stage ('git clone'){
            steps {
                git branch: 'main', url: 'https://github.com/withoutspleen/DevOps-engineer.git'
            }
        }

        stage ('terraform init'){
            steps {
                sh 'cd certification/terraform/ && terraform init -no-color'
            }
        }

        stage ('terraform apply'){
            steps {
                sh 'cd certification/terraform && terraform apply -auto-approve -no-color'}
            }

        stage ('add instances ip to inventory'){
            steps {
                sh '''cd certification/terraform && cat << EOF >> ../ansible/inventory
[build]
$(terraform output -raw build_instance_dns)

[production]
$(terraform output -raw prod_instance_dns)
EOF'''
            }
        }

        stage ('wait few seconds for insatnces start'){
            steps {
                sh 'sleep 30s'
            }
        }

        stage ('ansible playbook'){
            steps {
                sh 'cd certification/terraform && ssh-keyscan -H $(terraform output -raw build_instance_dns) >> ~/.ssh/known_hosts && ssh-keyscan -H $(terraform output -raw prod_instance_dns) >> ~/.ssh/known_hosts'
                sh 'ansible-playbook -i certification/ansible/inventory --vault-password-file=/home/user/.ansible/vault_pass --key-file "~/.ssh/aws-key" certification/ansible/playbook.yml'
            }
        }
    }
}